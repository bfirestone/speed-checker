// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// HostsColumns holds the columns for the "hosts" table.
	HostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "hostname", Type: field.TypeString},
		{Name: "port", Type: field.TypeInt, Default: 5201},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"lan", "vpn", "remote"}},
		{Name: "active", Type: field.TypeBool, Default: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// HostsTable holds the schema information for the "hosts" table.
	HostsTable = &schema.Table{
		Name:       "hosts",
		Columns:    HostsColumns,
		PrimaryKey: []*schema.Column{HostsColumns[0]},
	}
	// IperfTestsColumns holds the columns for the "iperf_tests" table.
	IperfTestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "sent_mbps", Type: field.TypeFloat64},
		{Name: "received_mbps", Type: field.TypeFloat64},
		{Name: "retransmits", Type: field.TypeFloat64, Nullable: true},
		{Name: "mean_rtt_ms", Type: field.TypeFloat64, Nullable: true},
		{Name: "duration_seconds", Type: field.TypeInt, Default: 10},
		{Name: "protocol", Type: field.TypeString, Default: "TCP"},
		{Name: "success", Type: field.TypeBool, Default: true},
		{Name: "error_message", Type: field.TypeString, Nullable: true},
		{Name: "host_iperf_tests", Type: field.TypeInt, Nullable: true},
	}
	// IperfTestsTable holds the schema information for the "iperf_tests" table.
	IperfTestsTable = &schema.Table{
		Name:       "iperf_tests",
		Columns:    IperfTestsColumns,
		PrimaryKey: []*schema.Column{IperfTestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "iperf_tests_hosts_iperf_tests",
				Columns:    []*schema.Column{IperfTestsColumns[10]},
				RefColumns: []*schema.Column{HostsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SpeedTestsColumns holds the columns for the "speed_tests" table.
	SpeedTestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "download_mbps", Type: field.TypeFloat64},
		{Name: "upload_mbps", Type: field.TypeFloat64},
		{Name: "ping_ms", Type: field.TypeFloat64},
		{Name: "jitter_ms", Type: field.TypeFloat64, Nullable: true},
		{Name: "server_name", Type: field.TypeString, Nullable: true},
		{Name: "server_id", Type: field.TypeString, Nullable: true},
		{Name: "isp", Type: field.TypeString, Nullable: true},
		{Name: "external_ip", Type: field.TypeString, Nullable: true},
		{Name: "result_url", Type: field.TypeString, Nullable: true},
	}
	// SpeedTestsTable holds the schema information for the "speed_tests" table.
	SpeedTestsTable = &schema.Table{
		Name:       "speed_tests",
		Columns:    SpeedTestsColumns,
		PrimaryKey: []*schema.Column{SpeedTestsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		HostsTable,
		IperfTestsTable,
		SpeedTestsTable,
	}
)

func init() {
	IperfTestsTable.ForeignKeys[0].RefTable = HostsTable
}
