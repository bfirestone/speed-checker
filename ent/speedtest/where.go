// Code generated by ent, DO NOT EDIT.

package speedtest

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/bfirestone/speed-checker/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLTE(FieldID, id))
}

// Timestamp applies equality check predicate on the "timestamp" field. It's identical to TimestampEQ.
func Timestamp(v time.Time) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldTimestamp, v))
}

// DownloadMbps applies equality check predicate on the "download_mbps" field. It's identical to DownloadMbpsEQ.
func DownloadMbps(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldDownloadMbps, v))
}

// UploadMbps applies equality check predicate on the "upload_mbps" field. It's identical to UploadMbpsEQ.
func UploadMbps(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldUploadMbps, v))
}

// PingMs applies equality check predicate on the "ping_ms" field. It's identical to PingMsEQ.
func PingMs(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldPingMs, v))
}

// JitterMs applies equality check predicate on the "jitter_ms" field. It's identical to JitterMsEQ.
func JitterMs(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldJitterMs, v))
}

// ServerName applies equality check predicate on the "server_name" field. It's identical to ServerNameEQ.
func ServerName(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldServerName, v))
}

// ServerID applies equality check predicate on the "server_id" field. It's identical to ServerIDEQ.
func ServerID(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldServerID, v))
}

// Isp applies equality check predicate on the "isp" field. It's identical to IspEQ.
func Isp(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldIsp, v))
}

// ExternalIP applies equality check predicate on the "external_ip" field. It's identical to ExternalIPEQ.
func ExternalIP(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldExternalIP, v))
}

// ResultURL applies equality check predicate on the "result_url" field. It's identical to ResultURLEQ.
func ResultURL(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldResultURL, v))
}

// DaemonID applies equality check predicate on the "daemon_id" field. It's identical to DaemonIDEQ.
func DaemonID(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldDaemonID, v))
}

// TimestampEQ applies the EQ predicate on the "timestamp" field.
func TimestampEQ(v time.Time) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldTimestamp, v))
}

// TimestampNEQ applies the NEQ predicate on the "timestamp" field.
func TimestampNEQ(v time.Time) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNEQ(FieldTimestamp, v))
}

// TimestampIn applies the In predicate on the "timestamp" field.
func TimestampIn(vs ...time.Time) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIn(FieldTimestamp, vs...))
}

// TimestampNotIn applies the NotIn predicate on the "timestamp" field.
func TimestampNotIn(vs ...time.Time) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotIn(FieldTimestamp, vs...))
}

// TimestampGT applies the GT predicate on the "timestamp" field.
func TimestampGT(v time.Time) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGT(FieldTimestamp, v))
}

// TimestampGTE applies the GTE predicate on the "timestamp" field.
func TimestampGTE(v time.Time) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGTE(FieldTimestamp, v))
}

// TimestampLT applies the LT predicate on the "timestamp" field.
func TimestampLT(v time.Time) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLT(FieldTimestamp, v))
}

// TimestampLTE applies the LTE predicate on the "timestamp" field.
func TimestampLTE(v time.Time) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLTE(FieldTimestamp, v))
}

// DownloadMbpsEQ applies the EQ predicate on the "download_mbps" field.
func DownloadMbpsEQ(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldDownloadMbps, v))
}

// DownloadMbpsNEQ applies the NEQ predicate on the "download_mbps" field.
func DownloadMbpsNEQ(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNEQ(FieldDownloadMbps, v))
}

// DownloadMbpsIn applies the In predicate on the "download_mbps" field.
func DownloadMbpsIn(vs ...float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIn(FieldDownloadMbps, vs...))
}

// DownloadMbpsNotIn applies the NotIn predicate on the "download_mbps" field.
func DownloadMbpsNotIn(vs ...float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotIn(FieldDownloadMbps, vs...))
}

// DownloadMbpsGT applies the GT predicate on the "download_mbps" field.
func DownloadMbpsGT(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGT(FieldDownloadMbps, v))
}

// DownloadMbpsGTE applies the GTE predicate on the "download_mbps" field.
func DownloadMbpsGTE(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGTE(FieldDownloadMbps, v))
}

// DownloadMbpsLT applies the LT predicate on the "download_mbps" field.
func DownloadMbpsLT(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLT(FieldDownloadMbps, v))
}

// DownloadMbpsLTE applies the LTE predicate on the "download_mbps" field.
func DownloadMbpsLTE(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLTE(FieldDownloadMbps, v))
}

// UploadMbpsEQ applies the EQ predicate on the "upload_mbps" field.
func UploadMbpsEQ(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldUploadMbps, v))
}

// UploadMbpsNEQ applies the NEQ predicate on the "upload_mbps" field.
func UploadMbpsNEQ(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNEQ(FieldUploadMbps, v))
}

// UploadMbpsIn applies the In predicate on the "upload_mbps" field.
func UploadMbpsIn(vs ...float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIn(FieldUploadMbps, vs...))
}

// UploadMbpsNotIn applies the NotIn predicate on the "upload_mbps" field.
func UploadMbpsNotIn(vs ...float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotIn(FieldUploadMbps, vs...))
}

// UploadMbpsGT applies the GT predicate on the "upload_mbps" field.
func UploadMbpsGT(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGT(FieldUploadMbps, v))
}

// UploadMbpsGTE applies the GTE predicate on the "upload_mbps" field.
func UploadMbpsGTE(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGTE(FieldUploadMbps, v))
}

// UploadMbpsLT applies the LT predicate on the "upload_mbps" field.
func UploadMbpsLT(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLT(FieldUploadMbps, v))
}

// UploadMbpsLTE applies the LTE predicate on the "upload_mbps" field.
func UploadMbpsLTE(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLTE(FieldUploadMbps, v))
}

// PingMsEQ applies the EQ predicate on the "ping_ms" field.
func PingMsEQ(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldPingMs, v))
}

// PingMsNEQ applies the NEQ predicate on the "ping_ms" field.
func PingMsNEQ(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNEQ(FieldPingMs, v))
}

// PingMsIn applies the In predicate on the "ping_ms" field.
func PingMsIn(vs ...float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIn(FieldPingMs, vs...))
}

// PingMsNotIn applies the NotIn predicate on the "ping_ms" field.
func PingMsNotIn(vs ...float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotIn(FieldPingMs, vs...))
}

// PingMsGT applies the GT predicate on the "ping_ms" field.
func PingMsGT(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGT(FieldPingMs, v))
}

// PingMsGTE applies the GTE predicate on the "ping_ms" field.
func PingMsGTE(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGTE(FieldPingMs, v))
}

// PingMsLT applies the LT predicate on the "ping_ms" field.
func PingMsLT(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLT(FieldPingMs, v))
}

// PingMsLTE applies the LTE predicate on the "ping_ms" field.
func PingMsLTE(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLTE(FieldPingMs, v))
}

// JitterMsEQ applies the EQ predicate on the "jitter_ms" field.
func JitterMsEQ(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldJitterMs, v))
}

// JitterMsNEQ applies the NEQ predicate on the "jitter_ms" field.
func JitterMsNEQ(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNEQ(FieldJitterMs, v))
}

// JitterMsIn applies the In predicate on the "jitter_ms" field.
func JitterMsIn(vs ...float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIn(FieldJitterMs, vs...))
}

// JitterMsNotIn applies the NotIn predicate on the "jitter_ms" field.
func JitterMsNotIn(vs ...float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotIn(FieldJitterMs, vs...))
}

// JitterMsGT applies the GT predicate on the "jitter_ms" field.
func JitterMsGT(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGT(FieldJitterMs, v))
}

// JitterMsGTE applies the GTE predicate on the "jitter_ms" field.
func JitterMsGTE(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGTE(FieldJitterMs, v))
}

// JitterMsLT applies the LT predicate on the "jitter_ms" field.
func JitterMsLT(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLT(FieldJitterMs, v))
}

// JitterMsLTE applies the LTE predicate on the "jitter_ms" field.
func JitterMsLTE(v float64) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLTE(FieldJitterMs, v))
}

// JitterMsIsNil applies the IsNil predicate on the "jitter_ms" field.
func JitterMsIsNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIsNull(FieldJitterMs))
}

// JitterMsNotNil applies the NotNil predicate on the "jitter_ms" field.
func JitterMsNotNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotNull(FieldJitterMs))
}

// ServerNameEQ applies the EQ predicate on the "server_name" field.
func ServerNameEQ(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldServerName, v))
}

// ServerNameNEQ applies the NEQ predicate on the "server_name" field.
func ServerNameNEQ(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNEQ(FieldServerName, v))
}

// ServerNameIn applies the In predicate on the "server_name" field.
func ServerNameIn(vs ...string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIn(FieldServerName, vs...))
}

// ServerNameNotIn applies the NotIn predicate on the "server_name" field.
func ServerNameNotIn(vs ...string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotIn(FieldServerName, vs...))
}

// ServerNameGT applies the GT predicate on the "server_name" field.
func ServerNameGT(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGT(FieldServerName, v))
}

// ServerNameGTE applies the GTE predicate on the "server_name" field.
func ServerNameGTE(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGTE(FieldServerName, v))
}

// ServerNameLT applies the LT predicate on the "server_name" field.
func ServerNameLT(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLT(FieldServerName, v))
}

// ServerNameLTE applies the LTE predicate on the "server_name" field.
func ServerNameLTE(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLTE(FieldServerName, v))
}

// ServerNameContains applies the Contains predicate on the "server_name" field.
func ServerNameContains(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldContains(FieldServerName, v))
}

// ServerNameHasPrefix applies the HasPrefix predicate on the "server_name" field.
func ServerNameHasPrefix(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldHasPrefix(FieldServerName, v))
}

// ServerNameHasSuffix applies the HasSuffix predicate on the "server_name" field.
func ServerNameHasSuffix(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldHasSuffix(FieldServerName, v))
}

// ServerNameIsNil applies the IsNil predicate on the "server_name" field.
func ServerNameIsNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIsNull(FieldServerName))
}

// ServerNameNotNil applies the NotNil predicate on the "server_name" field.
func ServerNameNotNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotNull(FieldServerName))
}

// ServerNameEqualFold applies the EqualFold predicate on the "server_name" field.
func ServerNameEqualFold(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEqualFold(FieldServerName, v))
}

// ServerNameContainsFold applies the ContainsFold predicate on the "server_name" field.
func ServerNameContainsFold(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldContainsFold(FieldServerName, v))
}

// ServerIDEQ applies the EQ predicate on the "server_id" field.
func ServerIDEQ(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldServerID, v))
}

// ServerIDNEQ applies the NEQ predicate on the "server_id" field.
func ServerIDNEQ(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNEQ(FieldServerID, v))
}

// ServerIDIn applies the In predicate on the "server_id" field.
func ServerIDIn(vs ...string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIn(FieldServerID, vs...))
}

// ServerIDNotIn applies the NotIn predicate on the "server_id" field.
func ServerIDNotIn(vs ...string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotIn(FieldServerID, vs...))
}

// ServerIDGT applies the GT predicate on the "server_id" field.
func ServerIDGT(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGT(FieldServerID, v))
}

// ServerIDGTE applies the GTE predicate on the "server_id" field.
func ServerIDGTE(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGTE(FieldServerID, v))
}

// ServerIDLT applies the LT predicate on the "server_id" field.
func ServerIDLT(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLT(FieldServerID, v))
}

// ServerIDLTE applies the LTE predicate on the "server_id" field.
func ServerIDLTE(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLTE(FieldServerID, v))
}

// ServerIDContains applies the Contains predicate on the "server_id" field.
func ServerIDContains(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldContains(FieldServerID, v))
}

// ServerIDHasPrefix applies the HasPrefix predicate on the "server_id" field.
func ServerIDHasPrefix(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldHasPrefix(FieldServerID, v))
}

// ServerIDHasSuffix applies the HasSuffix predicate on the "server_id" field.
func ServerIDHasSuffix(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldHasSuffix(FieldServerID, v))
}

// ServerIDIsNil applies the IsNil predicate on the "server_id" field.
func ServerIDIsNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIsNull(FieldServerID))
}

// ServerIDNotNil applies the NotNil predicate on the "server_id" field.
func ServerIDNotNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotNull(FieldServerID))
}

// ServerIDEqualFold applies the EqualFold predicate on the "server_id" field.
func ServerIDEqualFold(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEqualFold(FieldServerID, v))
}

// ServerIDContainsFold applies the ContainsFold predicate on the "server_id" field.
func ServerIDContainsFold(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldContainsFold(FieldServerID, v))
}

// IspEQ applies the EQ predicate on the "isp" field.
func IspEQ(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldIsp, v))
}

// IspNEQ applies the NEQ predicate on the "isp" field.
func IspNEQ(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNEQ(FieldIsp, v))
}

// IspIn applies the In predicate on the "isp" field.
func IspIn(vs ...string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIn(FieldIsp, vs...))
}

// IspNotIn applies the NotIn predicate on the "isp" field.
func IspNotIn(vs ...string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotIn(FieldIsp, vs...))
}

// IspGT applies the GT predicate on the "isp" field.
func IspGT(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGT(FieldIsp, v))
}

// IspGTE applies the GTE predicate on the "isp" field.
func IspGTE(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGTE(FieldIsp, v))
}

// IspLT applies the LT predicate on the "isp" field.
func IspLT(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLT(FieldIsp, v))
}

// IspLTE applies the LTE predicate on the "isp" field.
func IspLTE(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLTE(FieldIsp, v))
}

// IspContains applies the Contains predicate on the "isp" field.
func IspContains(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldContains(FieldIsp, v))
}

// IspHasPrefix applies the HasPrefix predicate on the "isp" field.
func IspHasPrefix(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldHasPrefix(FieldIsp, v))
}

// IspHasSuffix applies the HasSuffix predicate on the "isp" field.
func IspHasSuffix(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldHasSuffix(FieldIsp, v))
}

// IspIsNil applies the IsNil predicate on the "isp" field.
func IspIsNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIsNull(FieldIsp))
}

// IspNotNil applies the NotNil predicate on the "isp" field.
func IspNotNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotNull(FieldIsp))
}

// IspEqualFold applies the EqualFold predicate on the "isp" field.
func IspEqualFold(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEqualFold(FieldIsp, v))
}

// IspContainsFold applies the ContainsFold predicate on the "isp" field.
func IspContainsFold(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldContainsFold(FieldIsp, v))
}

// ExternalIPEQ applies the EQ predicate on the "external_ip" field.
func ExternalIPEQ(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldExternalIP, v))
}

// ExternalIPNEQ applies the NEQ predicate on the "external_ip" field.
func ExternalIPNEQ(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNEQ(FieldExternalIP, v))
}

// ExternalIPIn applies the In predicate on the "external_ip" field.
func ExternalIPIn(vs ...string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIn(FieldExternalIP, vs...))
}

// ExternalIPNotIn applies the NotIn predicate on the "external_ip" field.
func ExternalIPNotIn(vs ...string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotIn(FieldExternalIP, vs...))
}

// ExternalIPGT applies the GT predicate on the "external_ip" field.
func ExternalIPGT(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGT(FieldExternalIP, v))
}

// ExternalIPGTE applies the GTE predicate on the "external_ip" field.
func ExternalIPGTE(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGTE(FieldExternalIP, v))
}

// ExternalIPLT applies the LT predicate on the "external_ip" field.
func ExternalIPLT(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLT(FieldExternalIP, v))
}

// ExternalIPLTE applies the LTE predicate on the "external_ip" field.
func ExternalIPLTE(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLTE(FieldExternalIP, v))
}

// ExternalIPContains applies the Contains predicate on the "external_ip" field.
func ExternalIPContains(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldContains(FieldExternalIP, v))
}

// ExternalIPHasPrefix applies the HasPrefix predicate on the "external_ip" field.
func ExternalIPHasPrefix(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldHasPrefix(FieldExternalIP, v))
}

// ExternalIPHasSuffix applies the HasSuffix predicate on the "external_ip" field.
func ExternalIPHasSuffix(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldHasSuffix(FieldExternalIP, v))
}

// ExternalIPIsNil applies the IsNil predicate on the "external_ip" field.
func ExternalIPIsNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIsNull(FieldExternalIP))
}

// ExternalIPNotNil applies the NotNil predicate on the "external_ip" field.
func ExternalIPNotNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotNull(FieldExternalIP))
}

// ExternalIPEqualFold applies the EqualFold predicate on the "external_ip" field.
func ExternalIPEqualFold(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEqualFold(FieldExternalIP, v))
}

// ExternalIPContainsFold applies the ContainsFold predicate on the "external_ip" field.
func ExternalIPContainsFold(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldContainsFold(FieldExternalIP, v))
}

// ResultURLEQ applies the EQ predicate on the "result_url" field.
func ResultURLEQ(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldResultURL, v))
}

// ResultURLNEQ applies the NEQ predicate on the "result_url" field.
func ResultURLNEQ(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNEQ(FieldResultURL, v))
}

// ResultURLIn applies the In predicate on the "result_url" field.
func ResultURLIn(vs ...string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIn(FieldResultURL, vs...))
}

// ResultURLNotIn applies the NotIn predicate on the "result_url" field.
func ResultURLNotIn(vs ...string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotIn(FieldResultURL, vs...))
}

// ResultURLGT applies the GT predicate on the "result_url" field.
func ResultURLGT(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGT(FieldResultURL, v))
}

// ResultURLGTE applies the GTE predicate on the "result_url" field.
func ResultURLGTE(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGTE(FieldResultURL, v))
}

// ResultURLLT applies the LT predicate on the "result_url" field.
func ResultURLLT(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLT(FieldResultURL, v))
}

// ResultURLLTE applies the LTE predicate on the "result_url" field.
func ResultURLLTE(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLTE(FieldResultURL, v))
}

// ResultURLContains applies the Contains predicate on the "result_url" field.
func ResultURLContains(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldContains(FieldResultURL, v))
}

// ResultURLHasPrefix applies the HasPrefix predicate on the "result_url" field.
func ResultURLHasPrefix(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldHasPrefix(FieldResultURL, v))
}

// ResultURLHasSuffix applies the HasSuffix predicate on the "result_url" field.
func ResultURLHasSuffix(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldHasSuffix(FieldResultURL, v))
}

// ResultURLIsNil applies the IsNil predicate on the "result_url" field.
func ResultURLIsNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIsNull(FieldResultURL))
}

// ResultURLNotNil applies the NotNil predicate on the "result_url" field.
func ResultURLNotNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotNull(FieldResultURL))
}

// ResultURLEqualFold applies the EqualFold predicate on the "result_url" field.
func ResultURLEqualFold(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEqualFold(FieldResultURL, v))
}

// ResultURLContainsFold applies the ContainsFold predicate on the "result_url" field.
func ResultURLContainsFold(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldContainsFold(FieldResultURL, v))
}

// DaemonIDEQ applies the EQ predicate on the "daemon_id" field.
func DaemonIDEQ(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEQ(FieldDaemonID, v))
}

// DaemonIDNEQ applies the NEQ predicate on the "daemon_id" field.
func DaemonIDNEQ(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNEQ(FieldDaemonID, v))
}

// DaemonIDIn applies the In predicate on the "daemon_id" field.
func DaemonIDIn(vs ...string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIn(FieldDaemonID, vs...))
}

// DaemonIDNotIn applies the NotIn predicate on the "daemon_id" field.
func DaemonIDNotIn(vs ...string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotIn(FieldDaemonID, vs...))
}

// DaemonIDGT applies the GT predicate on the "daemon_id" field.
func DaemonIDGT(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGT(FieldDaemonID, v))
}

// DaemonIDGTE applies the GTE predicate on the "daemon_id" field.
func DaemonIDGTE(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldGTE(FieldDaemonID, v))
}

// DaemonIDLT applies the LT predicate on the "daemon_id" field.
func DaemonIDLT(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLT(FieldDaemonID, v))
}

// DaemonIDLTE applies the LTE predicate on the "daemon_id" field.
func DaemonIDLTE(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldLTE(FieldDaemonID, v))
}

// DaemonIDContains applies the Contains predicate on the "daemon_id" field.
func DaemonIDContains(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldContains(FieldDaemonID, v))
}

// DaemonIDHasPrefix applies the HasPrefix predicate on the "daemon_id" field.
func DaemonIDHasPrefix(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldHasPrefix(FieldDaemonID, v))
}

// DaemonIDHasSuffix applies the HasSuffix predicate on the "daemon_id" field.
func DaemonIDHasSuffix(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldHasSuffix(FieldDaemonID, v))
}

// DaemonIDIsNil applies the IsNil predicate on the "daemon_id" field.
func DaemonIDIsNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldIsNull(FieldDaemonID))
}

// DaemonIDNotNil applies the NotNil predicate on the "daemon_id" field.
func DaemonIDNotNil() predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldNotNull(FieldDaemonID))
}

// DaemonIDEqualFold applies the EqualFold predicate on the "daemon_id" field.
func DaemonIDEqualFold(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldEqualFold(FieldDaemonID, v))
}

// DaemonIDContainsFold applies the ContainsFold predicate on the "daemon_id" field.
func DaemonIDContainsFold(v string) predicate.SpeedTest {
	return predicate.SpeedTest(sql.FieldContainsFold(FieldDaemonID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SpeedTest) predicate.SpeedTest {
	return predicate.SpeedTest(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SpeedTest) predicate.SpeedTest {
	return predicate.SpeedTest(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SpeedTest) predicate.SpeedTest {
	return predicate.SpeedTest(sql.NotPredicates(p))
}
