# API-Centric Docker Compose
# Usage: docker-compose -f docker-compose.api.yml up

services:
  # API Server
  api:
    build: .
    container_name: speed-checker-api
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - SPEED_CHECKER_DATABASE_DSN=/app/data/speedtest_results.db?_fk=1
      - SPEED_CHECKER_SERVER_HOST=0.0.0.0
      - SPEED_CHECKER_SERVER_PORT=8080
    command: ["./speed-checker", "api"]
    restart: unless-stopped
    networks:
      - speed-checker
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/dashboard"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

  # Primary Daemon
  daemon:
    build: .
    container_name: speed-checker-daemon
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - SPEED_CHECKER_TESTING_SPEEDTEST_INTERVAL=15m
      - SPEED_CHECKER_TESTING_IPERF_INTERVAL=10m
      - SPEED_CHECKER_TESTING_IPERF_DURATION=10
    command: ["./speed-checker", "daemon", "--api-endpoint", "http://api:8080"]
    restart: unless-stopped
    networks:
      - speed-checker
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pgrep", "-f", "speed-checker daemon"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

  # Additional Daemon (for scaling example)
  daemon-2:
    build: .
    container_name: speed-checker-daemon-2
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - SPEED_CHECKER_TESTING_SPEEDTEST_INTERVAL=20m  # Different schedule
      - SPEED_CHECKER_TESTING_IPERF_INTERVAL=15m      # Different schedule
      - SPEED_CHECKER_TESTING_IPERF_DURATION=10
    command: ["./speed-checker", "daemon", "--api-endpoint", "http://api:8080"]
    restart: unless-stopped
    networks:
      - speed-checker
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pgrep", "-f", "speed-checker daemon"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    profiles:
      - scaling

  # Standalone Frontend (optional)
  frontend:
    build: ./frontend
    container_name: speed-checker-frontend
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - speed-checker
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3
    profiles:
      - frontend

networks:
  speed-checker:
#    driver: bridge

volumes:
  speed-checker-data:
    driver: local 